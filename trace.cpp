Int_ctx ctx0 = mk_ctx();
Int_type type0 = mk_boolean_type(ctx0);
Int_type type1 = mk_int8_type(ctx0);
Int_type type2 = mk_int16_type(ctx0);
Int_type type3 = mk_int32_type(ctx0);
Int_type type4 = mk_uint8_type(ctx0);
Int_type type5 = mk_uint16_type(ctx0);
Int_type type6 = mk_uint32_type(ctx0);
Int_type type7 = mk_real_type(ctx0);
Int_type type8 = mk_double_type(ctx0);
Int_net net4294967295 = mk_undef(ctx0);
Int_net net1 = mk_true(ctx0);
Int_net net2 = mk_false(ctx0);
Int_net net7 = mk_latch(ctx0, "__first_tick", type0);
set_latch_init_next(ctx0, net7, net1, net2);
Int_net net8 = mk_input(ctx0, "i0", type0);
Int_net net9 = mk_latch(ctx0, "pre_b", type0);
Int_net net10 = mk_not(ctx0, net9);
Int_net net11 = mk_and(ctx0, net8, net10);
Int_net net14 = mk_ite(ctx0, net7, net2, net11);
set_latch_init_next(ctx0, net9, net2, net14);
mk_output(ctx0, net14);
Int_trace trace0 = mk_trace(ctx0);
trace_set_value(ctx0, trace0, net8, 0, "F");
trace_set_value(ctx0, trace0, net8, 1, "F");
trace_set_value(ctx0, trace0, net8, 2, "F");
trace_set_value(ctx0, trace0, net8, 3, "F");
trace_set_value(ctx0, trace0, net8, 4, "F");
trace_set_value(ctx0, trace0, net8, 5, "F");
trace_set_value(ctx0, trace0, net8, 6, "F");
trace_set_value(ctx0, trace0, net8, 7, "F");
trace_set_value(ctx0, trace0, net8, 8, "F");
trace_set_value(ctx0, trace0, net8, 9, "F");
trace_set_value(ctx0, trace0, net8, 10, "F");
Int_simulator sim0 = mk_simulator(ctx0);
trace_get_watched_nets_number(trace0);
trace_get_max_depth(trace0);
trace_prepare_value_for_net(ctx0, trace0, net8, 0);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 1);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 2);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 3);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 4);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 5);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 6);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 7);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 8);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 9);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 10);
value_at(0);
simulator_add_watch(ctx0, sim0, net14);
simulator_simulate(sim0, trace0, 11);
trace_get_watched_nets_number(trace0);
trace_get_max_depth(trace0);
trace_prepare_value_for_net(ctx0, trace0, net8, 0);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 1);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 2);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 3);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 4);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 5);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 6);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 7);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 8);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 9);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 10);
value_at(0);
trace_prepare_value_for_net(ctx0, trace0, net8, 11);
